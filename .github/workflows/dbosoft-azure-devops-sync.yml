name: Sync issue to Azure DevOps
on:
  workflow_call:
    inputs:
      topic:
        type: string
        required: true
      # Overrides the DevOps project (only for testing)
      ado_project:
        type: string
        default: Internal
        required: false
    secrets:
      ado_pat:
        required: true
      github_app_id:
        required: true
      github_app_key:
        required: true

jobs:
  sync:
    if: ${{ !github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    # Limit concurrency to prevent sync issues. See
    # https://github.com/danhellem/github-actions-issue-to-work-item/issues/70#issuecomment-1572555969
    concurrency:
      group: issue-${{ github.repository_owner}}-${{ github.repository }}-${{ github.event.issue.number }}
      cancel-in-progress: false
    steps:
      - name: Prepare sync
        id: prepare
        uses: actions/github-script@v7
        env:
          ADO_PROJECT: ${{ inputs.ado_project}}
          TOPIC: ${{ inputs.topic }}
        with:
          script: |
            let push = true;
            const issue = context.payload.issue;
            const labels = issue.labels;
            const topic = process.env.TOPIC;
            const project = process.env.ADO_PROJECT;
            let area = project;
            let itemType = 'User Story';

            if (topic === 'eryph'){
              area += '\\ERYPH';
            } else if (topic === 'sap') {
              area += '\\SAP Projects';
            } else if (topic !== 'generic') {
              push = false;
              core.error(`The configured topic ${topic} is not supported`);
            }

            if (labels.find(l => l.name === 'bug')) {
              itemType = "Bug";
            }

            if (push) {
              core.info(`Going to push issue ${issue.number} to DevOps`);
            } else {
              core.info(`Issue ${issue.number} will not be pushed to DevOps`);
            }

            return {
              push: push,
              project: project,
              area: area,
              item_type: itemType,
            };

      - name: Get GitHub token
        uses: actions/create-github-app-token@v1
        if: ${{ fromJson(steps.prepare.outputs.result).push }}
        id: get-github-token
        with:
          app-id: ${{ secrets.github_app_id }}
          private-key: ${{ secrets.github_app_key }}

      - name: Push to Azure DevOps
        # Reference the latest commit on master by commit hash
        uses: danhellem/github-actions-issue-to-work-item@c30899643bcfce0a058cd5319f762ca3b20163d2
        if: ${{ fromJson(steps.prepare.outputs.result).push }}
        env:
          ado_token: ${{ secrets.ado_pat }}
          github_token: ${{ steps.get-github-token.outputs.token }}
          ado_organization: "dbosoft"
          ado_project: ${{ fromJson(steps.prepare.outputs.result).project }}
          ado_wit: ${{ fromJson(steps.prepare.outputs.result).item_type }}
          ado_area_path: ${{ fromJson(steps.prepare.outputs.result).area }}
          ado_new_state: "New"
          ado_active_state: "Active"
          ado_close_state: "Closed"
          ado_bypassrules: true
          log_level: 100
